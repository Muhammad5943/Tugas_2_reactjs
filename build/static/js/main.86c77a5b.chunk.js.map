{"version":3,"sources":["Page/Header.js","Page/Footer.js","Page/MenuKontak.js","ListData/ListMakanan.js","Page/MenuMakanan.js","Page/MenuTentangKami.js","ListData/ListMenuUtama.js","Page/MenuUtama.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","align","Footer","MenuKontak","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","alamat","kontak","Component","ListMakanan","datalist","list","src","alt","width","MenuMakanan","ListData_ListMakanan","MenuTentangKami","tentang","ListMenuUtama","image","MenuUtama","ListData_ListMenuUtama","App","Page_Header","Page_MenuUtama","Page_MenuMakanan","Page_MenuTentangKami","Page_MenuKontak","Page_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86c77a5b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header=()=>{\r\n  return(\r\n    <div>\r\n      <p align=\"center\">\r\n        Home|Product|Kontak|Tentang Kami\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer=()=>{\r\n  return(\r\n    <div>\r\n      <p>Tugas 2 ReactJS</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React,{Component} from \"react\";\r\n\r\nclass MenuKontak extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      alamat:\"Jl.Swadaya IV,Pd.Ranggon,Cipayung,Kota Jakarta Timur, Daerah Khusu IbuKota Jakarta 13860\",\r\n      kontak:\"081312345678\"\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <center>\r\n          <h3>{this.state.alamat}</h3>\r\n          <h4>{this.state.kontak}</h4>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuKontak;\r\n","import React,{Component} from \"react\";\r\n\r\nclass ListMakanan extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      datalist:this.props.list\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <img src={this.state.datalist} alt=\"Product Makanan\" width=\"150\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListMakanan;\r\n","import React,{Component} from \"react\";\r\nimport ListMakanan from \"../ListData/ListMakanan\";\r\n\r\nclass MenuMakanan extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h3>Daftar makanan yang kami sediakan :</h3>\r\n\r\n        <td>\r\n          <ListMakanan list=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\" />\r\n        </td>\r\n\r\n        <td>\r\n          <ListMakanan list=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\" />\r\n        </td>\r\n\r\n        <td>\r\n          <ListMakanan list=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"/>\r\n        </td>\r\n\r\n        <td>\r\n          <ListMakanan list=\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\"/>\r\n        </td>\r\n\r\n        <td>\r\n          <ListMakanan list=\"https://pesona.travel/media/nasi-kuning-sarapan-khas-nusantara-bermakna-mendalam_144651_1140.jpg\"/>\r\n        </td>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuMakanan;\r\n","import React,{Component} from \"react\";\r\n\r\nclass MenuTentangKami extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tentang: \"Warung Nusantara Adalah Restoran Yang Bernuansa Makanan Nusantara Kami Ada Untuk Membuat Anda Menikmati Makanan Khas Dari Nusantara\"\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <center>\r\n          <p>Tentang Kami</p> {this.state.tentang}\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuTentangKami;\r\n","import React,{Component} from \"react\";\r\n\r\nclass ListMenuUtama extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>\r\n          <center>Selamat Datang di Warung Nusantara</center>\r\n        </h1>\r\n        <center>\r\n          <img src={this.props.image} alt=\"Masakan-Nusantara\" width=\"600\" />\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListMenuUtama;\r\n","import React,{Component} from \"react\";\r\nimport ListMenuUtama from \"../ListData/ListMenuUtama\";\r\n\r\nclass MenuUtama extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <ListMenuUtama image=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/food1.jpg\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default MenuUtama;\r\n","import React,{Component} from \"react\";\nimport Header from \"./Page/Header\";\nimport Footer from \"./Page/Footer\";\nimport MenuKontak from \"./Page/MenuKontak\";\nimport MenuMakanan from \"./Page/MenuMakanan\";\nimport MenuTentangKami from \"./Page/MenuTentangKami\";\nimport MenuUtama from \"./Page/MenuUtama\";\n\n\nclass App extends Component{\n  render(){\n  return (\n    <div>\n      <Header />\n      <MenuUtama />\n      <MenuMakanan />\n\n      <MenuTentangKami />\n      <MenuKontak />\n      <Footer />\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}